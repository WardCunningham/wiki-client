digraph call_graph {
	node [style=filled; fillcolor=white; color=white];
	subgraph [style=filled; fillcolor=lightgray];

	ready [shape=box];
	ready -> begin;

	subgraph cluster_page {
		fillcolor=palegreen;
		label = "page";
		newPage;
		become;
	}

	subgraph cluster_lineup {
		fillcolor=palegreen;
		label = "lineup";
		addPage [label="add\nPage"];
		removeKey [label="remove\nKey"];
		removeAllAfter [label="remove\nAll\nAfter"];
	}


	subgraph cluster_legacy {
		label = "legacy";
		doInternalLink [label="do\nInternal\nLink"];
		click_create_button [label="click\ncreate\nbutton"];
		begin;
	}
	begin -> first;
	begin -> refresh;
	doInternalLink -> createPage;
	doInternalLink -> refresh;
	doInternalLink -> removeAllAfter;
	click_create_button -> get;
	click_create_button -> become;
	click_create_button -> put;
	click_create_button -> rebuildPage;
	

	subgraph cluster_wiki {
		label = "wiki";
		createPage [label="create\nPage"];
	}
	createPage -> page;
	page [shape=box]
	
	subgraph cluster_pageHandler {
		label = "pageHandler";
		get -> trouble; put;
	}
	get -> newPage;
	trouble -> newPage;
	

	subgraph cluster_refresh {
		label = "refresh";
		buildPage [label="build\nPage"]
		rebuildPage [label="rebuild\nPage"]
		refresh -> missing -> buildPage -> rebuildPage;
	}
	missing -> newPage;
	refresh -> get;
	refresh -> buildPage;
	buildPage -> addPage;
	rebuildPage -> story; story[shape=box];
	rebuildPage -> journal; journal[shape=box];
	

	subgraph cluster_search {
		label = "search";
		performSearch [label="perform\nSearch"];
	}
	performSearch -> newPage;
	performSearch -> createPage;
	performSearch -> buildPage;


	subgraph cluster_state {
		label = "state";
		show; first;
	}
	show -> refresh;
	show -> createPage;
	show -> removeKey;
	first -> createPage;


}